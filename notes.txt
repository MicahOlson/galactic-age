REQUIREMENTS
Take a person's age in years and create a class that does the following:

- Returns their age in Mercury years. (A Mercury year is .24 Earth years.)
- Returns their age in Venus years. (A Venus year is .62 Earth years.)
- Returns their age in Mars years. (A Mars year is 1.88 Earth years.)
- Returns their age in Jupiter years. (A Jupiter year is 11.86 Earth years.)

- Determines how many years a user has left to live on each planetâ€¦ (yikes!) To do this, the application will have to calculate the user's life expectancy. You can determine average life expectancy as you see fit. A simple way to do this would be to have the user input the average life expectancy for their demographic. A more involved way to do this would be to collect other information from the user (e.g. lifestyle, country of residence, activity level, etc.) to determine their life expectancy.

-If a user has already surpassed the average life expectancy, return the number of years they have lived past the life expectancy.


========================================
Person class

Properties
- Age property, value comes from user input
- Galactic ages object to be created by setter method below

Methods
  Take the name of a planet and calcuate a the age based on that planet's solar years
  - make getter / setter methods ?
    - setter to create galacticAges object (new Person property?)
    - getter to get specific age for a planet and return 'template literal'
  
  Determines how many years a user has left to live on each planet
  - Determine life expectancy
    - Ask user to provide their demographic (from selection?) and go with avg US expectancy for that demo
    - OR ask series of lifestyle questions to make a determination
  - Simple arithmetic to calc how many years the user has left to live ON EACH PLANET (expectancy - age)
  - if above result is negative, inform user they've surpassed their life expectancy by abs(result)

